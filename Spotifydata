/* Source:
https://www.kaggle.com/datasets/equinxx/spotify-top-50-songs-in-2021?select=spotify_top50_2021.csv
.csv file from Kaggle
Create a table in SQLite and import the .csv file into it.
*/

Here is the code to make the new table in SQLite:

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )
;

/* Next I make my own questions based on the data in the table.
Take the average duration of a song in minutes.
First I will find the average duration in the units given (milliseconds)
Then I will convert from milliseconds to seconds by dividing by 1000
Lastly I will convert from seconds to minutes by dividing by 60 
*/

SELECT (AVG(duration_ms ) / 1000 ) / 60 AS Avg_duration_mins
FROM BIT_DB.Spotifydata
;


--We can pretend that I am analyzing this data to help a music studio discover what kind of music they want to produce, if they want to compare what types of specs yield popular songs. 
--We can consider tempo and correlate that with danceability

SELECT * FROM BIT_DB.Spotifydata

Select artist_name, track_name 
FROM BIT_DB.Spotifydata
WHERE popularity >= 90
AND danceability > 0.700
ORDER BY popularity DESC
;

--These songs show who and what song was the most popular and most likely for people to dance along to. This could be great in clubs or at festivals to help get crowds more engaged.


--I also tried and saw what songs are in the key of E. this is determined by the category ‘song_key”. 

SELECT artist_name, track_name, popularity
FROM BIT_DB.Spotifydata
WHERE song_key = 4;


